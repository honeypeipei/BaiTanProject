{"name": "test_addhierarchy_01", "status": "broken", "statusDetails": {"message": "TypeError: tuple indices must be integers or slices, not str", "trace": "self = <TestCase.test_addHierarchy.TestAddhierarchy object at 0x04031870>\n\n    @allure.severity('blocker')\n    @allure.story(\"新增二级组织机构\")\n    def test_addhierarchy_01(self):\n        \"\"\"\n            用例描述：新增组织机构\n        \"\"\"\n    \n        #写log\n        with allure.step(\"写入Log\"):\n            log = Log.MyLog()\n            log.info('文件已开始执行')\n            conf = Config()\n            data = AddHierarchy()\n    \n        #获取请求域名\n        host = conf.host_debug\n        req_url = 'http://' + host\n    \n        # 获取请求参数\n        urls = data.url[0]\n        header = data.header[0]\n        param = data.data[0]\n        env = conf.environment\n        responsecode = data.responsecode[0]\n        responsesql = data.responsesql[0]\n        print(param[0])\n    \n        #参数化请求参数\n        with allure.step(\"获取输入参数值\"):\n            try:\n                param[0]['name'] = '国联' + str(int(time.time()))\n            except:\n                log.info(\"获取参数失败：{0}\".format(param[0]))\n    \n        #请求接口\n        api_url = req_url + urls\n        print(api_url)\n    \n        #post请求\n        request = Request.Request()\n        with allure.step(\"开始请求接口,RUL: {0},header:{1},request:{2}\".format(api_url, header, param[0])):\n            response = request.post_request(api_url, json.dumps(param[0]), header)\n            print(response)\n    \n        # 数据库查询结果\n        try:\n            # responsesql = str(responsesql[0]).replace('@sqlresult', str(response['body']['id']))\n            responsesqlresult = SqlResult(responsesql, env).get_sqlresult_list()\n            with allure.step(\"获取预期结果值成功，查询Sql：{0},查询结果：{1}\".format(responsesql, responsesqlresult)):\n                log.info('查询结果数据库成功：' + responsesql)\n        except:\n            log.info('查询结果数据库失败：' + responsesql)\n    \n        actual = []\n        for i in range(len(responsesqlresult)):\n            for k, v in responsesqlresult[i].items():\n                actual.append(responsesqlresult[i][k])\n    \n        # 增加断言\n        assertbody = Assertions()\n        with allure.step(\"接口返回结果：{0}\".format(response)):\n>           assertbody.assert_text(str(response['code']), str(responsecode))\nE           TypeError: tuple indices must be integers or slices, not str\n\nTestCase\\test_addHierarchy.py:86: TypeError"}, "description": "\n            用例描述：新增组织机构\n        ", "steps": [{"name": "写入Log", "status": "passed", "start": 1593766729062, "stop": 1593766729065}, {"name": "获取输入参数值", "status": "passed", "start": 1593766729065, "stop": 1593766729065}, {"name": "开始请求接口,RUL: http://10.2.2.61:8093/hierarchy/add,header:{'Content-Type': 'application/json;charset=utf-8', 'X-Api-Version': '1.X'},request:{'name': '国联1593766729', 'parent_id': 1, 'description': '这是二级组织描述'}", "status": "passed", "start": 1593766729066, "stop": 1593766750084}, {"name": "获取预期结果值成功，查询Sql：select name from sys_hierarchy where parent_id = 1,查询结果：[{'name': '国联环境-test'}, {'name': '西安国联信息-test'}, {'name': '国联1593585849'}, {'name': '国联1593585935'}, {'name': '国联1593586660'}, {'name': '国联1593587174'}, {'name': '国联1593587618'}, {'name': '国联1593588313'}, {'name': '国联1593589593'}, {'name': '国联1593589728'}, {'name': '国联1593590956'}, {'name': '技术研发部'}, {'name': '国联信息1593591250'}, {'name': ' '}, {'name': '国联信息1593591407'}, {'name': ''}, {'name': '同层级同上级1593674029'}, {'name': '西安国联信息-test'}, {'name': '同层级不同上级1593674096'}, {'name': '同层级不同上级1593674147'}, {'name': '同层级不同上级1593674301'}, {'name': '同层级不同上级1593674563'}, {'name': '同层级不同上级1593674667'}, {'name': '同层级不同上级1593675842'}, {'name': '同层级不同上级1593676062'}, {'name': '国联1593678549'}]", "status": "passed", "start": 1593766750222, "stop": 1593766750222}, {"name": "接口返回结果：()", "status": "broken", "statusDetails": {"message": "TypeError: tuple indices must be integers or slices, not str\n", "trace": "  File \"E:\\python_project\\InformationJava\\TestCase\\test_addHierarchy.py\", line 86, in test_addhierarchy_01\n    assertbody.assert_text(str(response['code']), str(responsecode))\n"}, "start": 1593766750222, "stop": 1593766750222}], "attachments": [{"name": "log", "source": "bb1644b0-7fe5-47cc-9674-4ce5008d6b78-attachment.txt", "type": "text/plain"}], "start": 1593766729061, "stop": 1593766750222, "uuid": "2b6afee0-fd9c-4410-9a3f-2a5106c2c422", "historyId": "8807d0ce3343b2b98fd0f703245001ef", "testCaseId": "8883da5f673e19baf789c4705fd63ec9", "fullName": "TestCase.test_addHierarchy.TestAddhierarchy#test_addhierarchy_01", "labels": [{"name": "feature", "value": "GetHierarchy"}, {"name": "severity", "value": "blocker"}, {"name": "story", "value": "新增二级组织机构"}, {"name": "parentSuite", "value": "TestCase"}, {"name": "suite", "value": "test_addHierarchy"}, {"name": "subSuite", "value": "TestAddhierarchy"}, {"name": "host", "value": "DESKTOP-DN3J7GJ"}, {"name": "thread", "value": "2212-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCase.test_addHierarchy"}]}